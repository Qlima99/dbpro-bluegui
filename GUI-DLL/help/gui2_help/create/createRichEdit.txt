HelpPath{Create}CommandName{createRichEdit}ReturnValue{int handle=}OpenBrace{(}Parameters{int x, int y, int width, int height, handle parent}CloseBrace{)}Description{Creates a richedit gadget.  Rich edit gadgets are very similar to normal edit gadgets created with createEdit, except that they are much more flexible.  Whereas all the text in an edit gadget has to have the same font and colour, each character in a richedit gadget can have a different font and colour.  This is useful for any word-processing type applications.<br>Rich edit gadgets work with the same commands as normal edit gadgets, but they also have several richedit-specific commands:  setSelFont, getSelFont and getSelColor.}ReturnDescription{Handle to the new richedit.}Param1{x}Param1Desc{X position of new gadget}Param2{y}Param2Desc{Y position of new gadget}Param3{width}Param3Desc{Width of new gadget in pixels}Param4{height}Param4Desc{Height of new gadget in pixels}Param5{}Param5Desc{}Param6{}Param6Desc{}Remarks{Richedit gadgets require more memory than standard edit gadgets, so you should only use them where multi-colour / font support is necessary.  Use the standard font command createFont to create a font for use with a richedit.<br>
Passing a font to setSelFont will set the font of the selected text.  The selected text is only highlighted in a different colour if the richedit gadget is selected, so if you wish to change the properties of text in a richedit without the user seeing a text selection, use activateGadget first to set the focus to another gadget, then select the text and change its font and finally set the focus back to the richedit gadget.
<br>
RichEdit gadgets are always multi-line.}Param7{parent}Param7Desc{Handle to the parent of the new gadget, or 0 for the main window}ExampleSource{}